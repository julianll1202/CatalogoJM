// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement())
  name String
  description String @db.Text
  price Decimal
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  images Image[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  products Product[]
  class Class @default(CAMION)
}

enum Class {
  CAMION
  MAQUINARIA_PESADA
  REMOLQUE
  GRUA
}
model Image {
  id Int @id @default(autoincrement())
  url String
  productId Int
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model User {
  id Int @id @default(autoincrement())
  userName String
  password String
  roleId Int
  role Role @relation(fields: [roleId], references: [id])
  refreshTokens RefreshToken[]
}

model Role {
  id Int @id @default(autoincrement())
  roleName String
  users User[]
}

model RefreshToken {
  id String @id @unique @default(uuid())
  hashedToken String @db.VarChar(255)
  userId Int
  user User @relation(fields: [userId], references: [id])
  revoked Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}